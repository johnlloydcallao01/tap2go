"use strict";(()=>{var e={};e.id=5218,e.ids=[5218],e.modules={3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},56434:(e,s,r)=>{r.r(s),r.d(s,{patchFetch:()=>m,routeModule:()=>f,serverHooks:()=>v,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>N});var t={};r.r(t),r.d(t,{GET:()=>l,OPTIONS:()=>g,POST:()=>c,PUT:()=>p});var o=r(96559),a=r(48088),n=r(37719),d=r(32190),u=r(58430),i=r(59506);async function c(e){try{let{address:s,validate:r=!1}=await e.json();if(!s||"string"!=typeof s)return d.NextResponse.json({success:!1,error:"Address is required and must be a string"},{status:400});let t=(0,i.Qu)(s);if(!(0,i.$m)(t))return d.NextResponse.json({success:!1,error:"Invalid address format"},{status:400});if(r){let e=await (0,u.E4)(t);if(!e.isServiceable)return d.NextResponse.json({success:!1,error:e.reason||"Address is not serviceable"},{status:400});return d.NextResponse.json({success:!0,data:[{coordinates:e.coordinates,formattedAddress:e.formattedAddress,placeId:"",addressComponents:[],types:[]}],message:"Address validated and geocoded successfully",status:"OK"},{status:200})}let o=await (0,u.ft)(t);return d.NextResponse.json({success:!0,data:[o],message:"Address geocoded successfully",status:"OK"},{status:200})}catch(e){if(console.error("Geocoding API error:",e),e&&"object"==typeof e&&"code"in e)return d.NextResponse.json({success:!1,error:e.message,details:e.details},{status:"NOT_FOUND"===e.code?404:"INVALID_REQUEST"===e.code?400:500});return d.NextResponse.json({success:!1,error:"Internal server error during geocoding"},{status:500})}}async function l(e){try{let{searchParams:s}=new URL(e.url),r=s.get("lat"),t=s.get("lng");if(!r||!t)return d.NextResponse.json({success:!1,error:"Latitude and longitude are required"},{status:400});let o=parseFloat(r),a=parseFloat(t);if(isNaN(o)||isNaN(a))return d.NextResponse.json({success:!1,error:"Invalid coordinates format"},{status:400});if(o<-90||o>90||a<-180||a>180)return d.NextResponse.json({success:!1,error:"Coordinates out of valid range"},{status:400});let n=await (0,u.Rt)({lat:o,lng:a});return d.NextResponse.json({success:!0,data:[n],message:"Coordinates reverse geocoded successfully",status:"OK"},{status:200})}catch(e){if(console.error("Reverse geocoding API error:",e),e&&"object"==typeof e&&"code"in e)return d.NextResponse.json({success:!1,error:e.message,details:e.details},{status:"NOT_FOUND"===e.code?404:"INVALID_REQUEST"===e.code?400:500});return d.NextResponse.json({success:!1,error:"Internal server error during reverse geocoding"},{status:500})}}async function p(e){try{let{address:s}=await e.json();if(!s||"string"!=typeof s)return d.NextResponse.json({success:!1,error:"Address is required and must be a string"},{status:400});let r=(0,i.Qu)(s);if(!(0,i.$m)(r))return d.NextResponse.json({success:!1,error:"Invalid address format"},{status:400});let t=await (0,u.E4)(r);return d.NextResponse.json({success:!0,data:t,message:t.isServiceable?"Address is serviceable":"Address is not serviceable"},{status:t.isServiceable?200:400})}catch(e){if(console.error("Address validation API error:",e),e&&"object"==typeof e&&"code"in e)return d.NextResponse.json({success:!1,error:e.message,details:e.details},{status:"NOT_FOUND"===e.code?404:"INVALID_REQUEST"===e.code?400:500});return d.NextResponse.json({success:!1,error:"Internal server error during address validation"},{status:500})}}async function g(){return new d.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, PUT, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let f=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/maps/geocode/route",pathname:"/api/maps/geocode",filename:"route",bundlePath:"app/api/maps/geocode/route"},resolvedPagePath:"C:\\Users\\ACER\\Desktop\\tap2go\\apps\\web\\src\\app\\api\\maps\\geocode\\route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:x,workUnitAsyncStorage:N,serverHooks:v}=f;function m(){return(0,n.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:N})}},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")}};var s=require("../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[4447,580,6770],()=>r(56434));module.exports=t})();