"use strict";(()=>{var e={};e.id=4140,e.ids=[4140],e.modules={3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},17220:(e,s,t)=>{t.r(s),t.d(s,{patchFetch:()=>R,routeModule:()=>N,serverHooks:()=>j,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>m});var r={};t.r(r),t.d(r,{GET:()=>p,OPTIONS:()=>f,POST:()=>l,PUT:()=>d});var n=t(96559),o=t(48088),i=t(37719),a=t(32190),u=t(58430),c=t(59506);async function l(e){try{let{origin:s,destination:t,waypoints:r=[]}=await e.json();if(!s||!t)return a.NextResponse.json({success:!1,error:"Origin and destination coordinates are required"},{status:400});if(!g(s)||!g(t))return a.NextResponse.json({success:!1,error:"Invalid coordinate format. Expected {lat: number, lng: number}"},{status:400});if(!(0,c.Du)(s)||!(0,c.Du)(t))return a.NextResponse.json({success:!1,error:"Coordinates must be within Philippines"},{status:400});if(r&&Array.isArray(r)){if(r.length>8)return a.NextResponse.json({success:!1,error:"Maximum 8 waypoints allowed per request"},{status:400});for(let e=0;e<r.length;e++){let s=r[e];if(!g(s))return a.NextResponse.json({success:!1,error:`Invalid coordinate format for waypoint ${e+1}`},{status:400});if(!(0,c.Du)(s))return a.NextResponse.json({success:!1,error:`Waypoint ${e+1} must be within Philippines`},{status:400})}}let n=await (0,u.FQ)(s,t,r.length>0?r:void 0);return a.NextResponse.json({success:!0,data:n,message:"Directions calculated successfully"},{status:200})}catch(e){if(console.error("Directions API error:",e),e&&"object"==typeof e&&"code"in e)return a.NextResponse.json({success:!1,error:e.message,details:e.details},{status:"NOT_FOUND"===e.code?404:"INVALID_REQUEST"===e.code?400:500});return a.NextResponse.json({success:!1,error:"Internal server error during directions calculation"},{status:500})}}async function p(e){try{let{searchParams:s}=new URL(e.url),t=s.get("origin_lat"),r=s.get("origin_lng"),n=s.get("dest_lat"),o=s.get("dest_lng");if(!t||!r||!n||!o)return a.NextResponse.json({success:!1,error:"Origin and destination coordinates are required (origin_lat, origin_lng, dest_lat, dest_lng)"},{status:400});let i={lat:parseFloat(t),lng:parseFloat(r)},l={lat:parseFloat(n),lng:parseFloat(o)};if(isNaN(i.lat)||isNaN(i.lng)||isNaN(l.lat)||isNaN(l.lng))return a.NextResponse.json({success:!1,error:"Invalid coordinate format"},{status:400});if(!(0,c.Du)(i)||!(0,c.Du)(l))return a.NextResponse.json({success:!1,error:"Coordinates must be within Philippines"},{status:400});let p=await (0,u.FQ)(i,l);return a.NextResponse.json({success:!0,data:p,message:"Directions calculated successfully"},{status:200})}catch(e){if(console.error("Directions GET API error:",e),e&&"object"==typeof e&&"code"in e)return a.NextResponse.json({success:!1,error:e.message,details:e.details},{status:"NOT_FOUND"===e.code?404:"INVALID_REQUEST"===e.code?400:500});return a.NextResponse.json({success:!1,error:"Internal server error during directions calculation"},{status:500})}}async function d(e){try{let{origin:s,destinations:t,returnToOrigin:r=!1}=await e.json();if(!s||!t||!Array.isArray(t))return a.NextResponse.json({success:!1,error:"Origin coordinate and destinations array are required"},{status:400});if(0===t.length)return a.NextResponse.json({success:!1,error:"At least one destination is required"},{status:400});if(t.length>8)return a.NextResponse.json({success:!1,error:"Maximum 8 destinations allowed for route optimization"},{status:400});if(!g(s))return a.NextResponse.json({success:!1,error:"Invalid origin coordinate format"},{status:400});if(!(0,c.Du)(s))return a.NextResponse.json({success:!1,error:"Origin must be within Philippines"},{status:400});for(let e=0;e<t.length;e++){let s=t[e];if(!g(s))return a.NextResponse.json({success:!1,error:`Invalid coordinate format for destination ${e+1}`},{status:400});if(!(0,c.Du)(s))return a.NextResponse.json({success:!1,error:`Destination ${e+1} must be within Philippines`},{status:400})}let n=r?s:t[t.length-1],o=r?t:t.slice(0,-1),i=await (0,u.FQ)(s,n,o);return a.NextResponse.json({success:!0,data:{...i,optimized:!0,totalStops:t.length,returnToOrigin:r},message:"Optimized route calculated successfully"},{status:200})}catch(e){if(console.error("Route optimization API error:",e),e&&"object"==typeof e&&"code"in e)return a.NextResponse.json({success:!1,error:e.message,details:e.details},{status:"NOT_FOUND"===e.code?404:"INVALID_REQUEST"===e.code?400:500});return a.NextResponse.json({success:!1,error:"Internal server error during route optimization"},{status:500})}}function g(e){return null!==e&&"object"==typeof e&&null!==e&&"lat"in e&&"lng"in e&&"number"==typeof e.lat&&"number"==typeof e.lng&&!isNaN(e.lat)&&!isNaN(e.lng)}async function f(){return new a.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, PUT, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let N=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/maps/directions/route",pathname:"/api/maps/directions",filename:"route",bundlePath:"app/api/maps/directions/route"},resolvedPagePath:"C:\\Users\\ACER\\Desktop\\tap2go\\apps\\web\\src\\app\\api\\maps\\directions\\route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:x,workUnitAsyncStorage:m,serverHooks:j}=N;function R(){return(0,i.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:m})}},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")}};var s=require("../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[4447,580,6770],()=>t(17220));module.exports=r})();