(()=>{var e={};e.id=765,e.ids=[765],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},28627:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>y,routeModule:()=>c,serverHooks:()=>m,workAsyncStorage:()=>u,workUnitAsyncStorage:()=>d});var n={};r.r(n),r.d(n,{POST:()=>p});var o=r(96559),a=r(48088),s=r(37719),i=r(32190);async function p(e){try{let t=process.env.PAYMONGO_SECRET_KEY_LIVE;if(!t)return i.NextResponse.json({error:"PayMongo secret key not configured"},{status:500});let{amount:r,currency:n="PHP",description:o,metadata:a}=await e.json();if(!r||!o)return i.NextResponse.json({error:"Amount and description are required"},{status:400});let s=await fetch("https://api.paymongo.com/v1/payment_intents",{method:"POST",headers:{Authorization:`Basic ${Buffer.from(t+":").toString("base64")}`,"Content-Type":"application/json"},body:JSON.stringify({data:{attributes:{amount:r,payment_method_allowed:["gcash","grab_pay","paymaya","card"],payment_method_options:{card:{request_three_d_secure:"automatic"}},currency:n,description:o,statement_descriptor:"Tap2Go Order",metadata:a||{}}}})}),p=await s.json();if(!s.ok)return console.error("PayMongo payment intent creation failed:",p),i.NextResponse.json({error:"Failed to create payment intent",details:p},{status:s.status});return console.log("PayMongo payment intent created successfully:",p.data.id),i.NextResponse.json({success:!0,message:"Payment intent created successfully",paymentIntent:p.data,nextSteps:{step1:"Use the client_key to create payment method on frontend",step2:"Attach payment method to payment intent",step3:"Confirm payment to trigger webhook",webhookUrl:"https://us-central1-tap2go-kuucn.cloudfunctions.net/paymongoWebhook"},testInstructions:{note:"This creates a payment intent. To test the complete flow:",instructions:["1. Use the client_key to create a payment method","2. Attach the payment method to this payment intent","3. Confirm the payment to trigger the webhook","4. Check Firebase Functions logs for webhook processing"]}})}catch(e){return console.error("Error creating PayMongo payment intent:",e),i.NextResponse.json({error:"Internal server error",message:e.message||"Unknown error occurred"},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/paymongo/create-payment-intent/route",pathname:"/api/paymongo/create-payment-intent",filename:"route",bundlePath:"app/api/paymongo/create-payment-intent/route"},resolvedPagePath:"C:\\Users\\ACER\\Desktop\\tap2go\\apps\\web\\src\\app\\api\\paymongo\\create-payment-intent\\route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:u,workUnitAsyncStorage:d,serverHooks:m}=c;function y(){return(0,s.patchFetch)({workAsyncStorage:u,workUnitAsyncStorage:d})}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[4447,580],()=>r(28627));module.exports=n})();