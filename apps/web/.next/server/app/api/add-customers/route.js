(()=>{var e={};e.id=3503,e.ids=[3503],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},14985:e=>{"use strict";e.exports=require("dns")},19771:e=>{"use strict";e.exports=require("process")},21820:e=>{"use strict";e.exports=require("os")},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29021:e=>{"use strict";e.exports=require("fs")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},34631:e=>{"use strict";e.exports=require("tls")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73496:e=>{"use strict";e.exports=require("http2")},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},79551:e=>{"use strict";e.exports=require("url")},81630:e=>{"use strict";e.exports=require("http")},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{},98286:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>g,routeModule:()=>p,serverHooks:()=>m,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var s={};r.r(s),r.d(s,{POST:()=>d});var o=r(96559),a=r(48088),i=r(37719),n=r(32190),u=r(58328);async function d(){try{let{db:e}=await Promise.all([r.e(1054),r.e(8010)]).then(r.bind(r,8010));console.log("\uD83D\uDE80 Adding customers collection to Firebase...");let t={collection:"customers",purpose:"End users who place orders",docIdFormat:"Customer's Auth UID",fields:{userRef:"string - path to users/{uid}",firstName:"string",lastName:"string",dateOfBirth:"timestamp (optional)",gender:"string (optional) - male | female | other | prefer_not_to_say",loyaltyPoints:"number",loyaltyTier:"string - bronze | silver | gold | platinum",totalOrders:"number",totalSpent:"number",avgOrderValue:"number",preferredCuisines:"string[] (optional)",dietaryRestrictions:"string[] (optional)",allergies:"string[] (optional)",marketingConsent:"boolean",smsConsent:"boolean",emailConsent:"boolean",referralCode:"string - unique referral code",referredBy:"string (optional) - customer UID who referred",createdAt:"timestamp",updatedAt:"timestamp",lastOrderAt:"timestamp (optional)"},subcollections:{addresses:{path:"customers/{customerUid}/addresses/{addressId}",purpose:"Customer delivery addresses",fields:{addressId:"string - auto-generated",label:"string - Home, Office, Other",recipientName:"string",recipientPhone:"string",address:{street:"string",city:"string",state:"string",zipCode:"string",country:"string",apartmentNumber:"string (optional)",floor:"string (optional)",landmark:"string (optional)",deliveryInstructions:"string (optional)"},location:"GeoPoint - {latitude: number, longitude: number}",formattedAddress:"string",isDefault:"boolean",isActive:"boolean",createdAt:"timestamp",updatedAt:"timestamp"}},paymentMethods:{path:"customers/{customerUid}/paymentMethods/{paymentMethodId}",purpose:"Customer payment methods",fields:{paymentMethodId:"string - auto-generated",type:"string - card | wallet | bank_account | cod",provider:"string - stripe, paypal, cash",last4:"string (optional) - for cards",cardBrand:"string (optional) - visa, mastercard, etc.",expiryMonth:"number (optional)",expiryYear:"number (optional)",walletProvider:"string (optional) - apple_pay, google_pay",isDefault:"boolean",isActive:"boolean",createdAt:"timestamp"}},favorites:{path:"customers/{customerUid}/favorites/{favoriteId}",purpose:"Customer favorite restaurants and items",fields:{favoriteId:"string - auto-generated",type:"string - restaurant | item",restaurantRef:"string (optional) - path to restaurants/{restId}",menuItemRef:"string (optional) - path to restaurants/{restId}/menuItems/{itemId}",createdAt:"timestamp"}},cart:{path:"customers/{customerUid}/cart/{cartItemId}",purpose:"Customer shopping cart",fields:{cartItemId:"string - auto-generated",restaurantRef:"string - path to restaurants/{restId}",menuItemRef:"string - path to menuItems/{itemId}",quantity:"number",specialInstructions:"string (optional)",selectedModifiers:{groupId:"string",selectedOptions:"string[] - optionIds"},itemPrice:"number - snapshot at time of adding",totalPrice:"number - including modifiers",addedAt:"timestamp"}}},setupDate:u.Dc.now(),version:"1.0.0"};await (0,u.BN)((0,u.H9)(e,"_system","customers_structure"),t);let s=(0,u.H9)(e,"_system","collections_structure"),o=await (0,u.x7)(s);if(o.exists()){let e=o.data(),t={...e,collections:{...e.collections,customers:{purpose:"End users who place orders",docIdFormat:"Customer's Auth UID (same as users UID)",subcollections:{addresses:"Customer delivery addresses",paymentMethods:"Customer payment methods",favorites:"Customer favorite restaurants and items",cart:"Customer shopping cart"}}},lastUpdated:u.Dc.now(),updatedBy:"api_route",version:"1.1.0"};await (0,u.BN)(s,t)}return n.NextResponse.json({success:!0,message:"Customers collection successfully added to Firebase"})}catch(t){console.error("Failed to add customers collection:",t);let e=t instanceof Error?t.message:"Unknown error occurred";return n.NextResponse.json({success:!1,error:e},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/add-customers/route",pathname:"/api/add-customers",filename:"route",bundlePath:"app/api/add-customers/route"},resolvedPagePath:"C:\\Users\\ACER\\Desktop\\tap2go\\apps\\web\\src\\app\\api\\add-customers\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:m}=p;function g(){return(0,i.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4447,580,8328],()=>r(98286));module.exports=s})();